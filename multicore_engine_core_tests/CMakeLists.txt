cmake_minimum_required (VERSION 2.6)

project(multicore_engine_tests)

make_src_groups()
if(MSVC)
	file(GLOB_RECURSE CORE_TESTS_SRC "src/*.cpp")
	add_executable(multicore_engine_core_tests ${CORE_TESTS_SRC})
	make_src_groups()
	target_link_libraries(multicore_engine_core_tests multicore_engine_core)
	if(NOT MSVC)
		target_link_libraries(multicore_engine_core_tests boost_unit_test_framework)
	endif()
	if(MSVC)
		set_target_properties(multicore_engine_core_tests PROPERTIES LINK_FLAGS_RELEASE "/LTCG")
		set_target_properties(multicore_engine_core_tests PROPERTIES LINK_FLAGS_MINSIZEREL "/LTCG")
		set_target_properties(multicore_engine_core_tests PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/LTCG")
	endif()
	add_test(NAME multicore_engine_core_tests COMMAND multicore_engine_core_tests)
else()
	add_definitions(-DBOOST_TEST_MODULE=multicore_engine)
	file(GLOB TESTS_SRC_DIRS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/src "src/*")
	foreach(TESTS_SRC_DIR ${TESTS_SRC_DIRS})
		if(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src/${TESTS_SRC_DIR})
			file(GLOB TESTS_SRCS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}/src/${TESTS_SRC_DIR} "src/${TESTS_SRC_DIR}/*.cpp")
			foreach(TESTS_SRC ${TESTS_SRCS})
				string(REPLACE ".cpp" "" TESTS_SRC_NAME ${TESTS_SRC})
				set(TARGET_NAME mce_test_${TESTS_SRC_DIR}_${TESTS_SRC_NAME})
				add_executable(${TARGET_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/src/${TESTS_SRC_DIR}/${TESTS_SRC})
				target_link_libraries(${TARGET_NAME} multicore_engine_core)
				if(NOT MSVC)
					target_link_libraries(${TARGET_NAME} boost_unit_test_framework)
				endif() 
				if(MSVC)
					set_target_properties(${TARGET_NAME} PROPERTIES LINK_FLAGS_RELEASE "/LTCG")
					set_target_properties(${TARGET_NAME} PROPERTIES LINK_FLAGS_MINSIZEREL "/LTCG")
					set_target_properties(${TARGET_NAME} PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/LTCG")
					#set_target_properties(${TARGET_NAME} PROPERTIES COMPILE_DEFINITIONS "BOOST_TEST_MODULE=${TARGET_NAME}")
				endif()
				add_test(NAME ${TESTS_SRC_DIR}_${TESTS_SRC_NAME} COMMAND ${TARGET_NAME} )
			endforeach()
		endif()
	endforeach()
endif()