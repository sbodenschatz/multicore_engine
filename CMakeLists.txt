cmake_minimum_required (VERSION 2.6)
project (multicore_engine)

include(CMakeUtils.txt)

set(CMAKE_CONFIGURATION_TYPES "Debug;Release")
if(NOT MSVC)
	if(NOT (${CMAKE_BUILD_TYPE} STREQUAL Debug) AND NOT (${CMAKE_BUILD_TYPE} STREQUAL Release))
		set(CMAKE_BUILD_TYPE Release)
	endif()
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -DDEBUG")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -DNDEBUG")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DNDEBUG")
	string(TOLOWER ${CMAKE_BUILD_TYPE} CONFIG_LOWER)
endif()

MESSAGE(STATUS "Compiler ID: " ${CMAKE_CXX_COMPILER_ID})
if (${CMAKE_CXX_COMPILER_ID} MATCHES "Clang")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Werror")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++ -Wall -Wextra -Werror -std=c++14")
	MESSAGE(STATUS "Clang C_FLAGS: " ${CMAKE_C_FLAGS})
	MESSAGE(STATUS "Clang CXX_FLAGS: " ${CMAKE_CXX_FLAGS})
endif ()
if (${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Werror")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror -std=c++14")
	MESSAGE(STATUS "GNU C_FLAGS: " ${CMAKE_C_FLAGS})
	MESSAGE(STATUS "GNU CXX_FLAGS: " ${CMAKE_CXX_FLAGS})
endif ()
if (MSVC)
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /DDEBUG")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /DDEBUG")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /DNDEBUG")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /DNDEBUG")

	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4 /WX /MP")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /WX /MP")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Ob2 /GL")
	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /WX /ignore:4221")
	set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} /WX /ignore:4221")
	set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG /INCREMENTAL:NO /OPT:REF")
	set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "${CMAKE_STATIC_LINKER_FLAGS_RELEASE} /LTCG")
	add_definitions(-DGLM_FORCE_CXX11)
	MESSAGE(STATUS "MSVC C_FLAGS: " ${CMAKE_C_FLAGS})
	MESSAGE(STATUS "MSVC CXX_FLAGS: " ${CMAKE_CXX_FLAGS})
endif ()

add_definitions(-DGLM_FORCE_RADIANS -DGLM_SWIZZLE -DGLM_FORCE_SIZE_T_LENGTH -DZLIB_CONST)
include_directories(${CMAKE_SOURCE_DIR}/multicore_engine_core/include)
include_directories(${CMAKE_SOURCE_DIR}/multicore_engine_parsers/include)

if (WIN32)
	include_directories(SYSTEM C:/Libs/Boost/include)
	include_directories(SYSTEM C:/Libs/glm/include)
	include_directories(SYSTEM C:/Libs/zlib/include)
	add_definitions(-DMULTICORE_ENGINE_WINDOWS) 
	#Windos 7 and higher:
	add_definitions(-D_WIN32_WINNT=0x0601)
	add_definitions(-DWINVER=0x0601)
	if(MINGW)
		link_directories(C:/Libs/Boost/lib_x64_mingw_${CONFIG_LOWER})
		link_directories(C:/Libs/zlib/lib_x64_mingw_${CONFIG_LOWER})
		link_directories(C:/Libs/TBB/lib/windows_intel64_gcc_mingw_${CONFIG_LOWER})
	elseif(MSVC)
		link_directories(C:/Libs/TBB/lib/windows_intel64_vc/)
		link_directories(C:/Libs/Boost/lib_x64_vc)
		link_directories(C:/Libs/zlib/lib_x64_vc)
		link_libraries(debug zlibstaticd)
		link_libraries(optimized zlibstatic)
	endif()
elseif(UNIX)
	add_definitions(-DMULTICORE_ENGINE_NOT_WINDOWS) 
	add_definitions(-DBOOST_TEST_DYN_LINK)
	include_directories(SYSTEM /usr/local/include/local-boost)
	if (${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
		set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fsanitize=address -fno-omit-frame-pointer -fsanitize=undefined")
		set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -Wl,-rpath,/usr/local/lib/local-boost/lib-gcc-debug -fsanitize=address -fsanitize=undefined")
		set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Wl,-rpath,/usr/local/lib/local-boost/lib-gcc-release")
		link_directories(/usr/local/lib/local-boost/lib-gcc-${CONFIG_LOWER})
	elseif (${CMAKE_CXX_COMPILER_ID} MATCHES "Clang")
		set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fsanitize=address -fno-omit-frame-pointer -fsanitize=undefined")
		set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -Wl,-rpath,/usr/local/lib/local-boost/lib-clang-debug -fsanitize=address -fsanitize=undefined")
		set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Wl,-rpath,/usr/local/lib/local-boost/lib-clang-release")
		link_directories(/usr/local/lib/local-boost/lib-clang-${CONFIG_LOWER})
		include_directories(SYSTEM /usr/include/libcxxabi/)
	endif ()
endif()

add_subdirectory(multicore_engine_parsers)
add_subdirectory(multicore_engine_core)
add_subdirectory(multicore_engine_core_tests)
add_subdirectory(multicore_engine_demo)
add_subdirectory(multicore_engine_load_unit_gen)
add_subdirectory(multicore_engine_pack_file_gen)

